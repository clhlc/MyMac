"显示行号
"set nu

"启动时隐去援助提示
set shortmess=atI

"语法高亮
syntax on

"不需要备份
set nobackup

set nocompatible

"没有保存或文件只读时弹出确认
set confirm

"鼠标可用(关闭鼠标)
set mouse-=a

" 允许在插入模式下对所有内容进行退格
set backspace=indent,eol,start

"tab缩进
set tabstop=4
set shiftwidth=4
set expandtab
set smarttab

"文件自动检测外部更改
set autoread

"c文件自动缩进
set cindent
    
"自动对齐
set autoindent

"智能缩进
set smartindent

"高亮查找匹配
set hlsearch

"显示匹配
set showmatch

"显示标尺，就是在右下角显示光标位置
set ruler

"去除vi的一致性
set nocompatible

"设置键盘映射，通过空格设置折叠
nnoremap <space> @=((foldclosed(line('.')<0)?'zc':'zo'))<CR>
""""""""""""""""""""""""""""""""""""""""""""""
"不要闪烁
set novisualbell

"启动显示状态行
set laststatus=2

"浅色显示当前行
autocmd InsertLeave * se nocul

"用浅色高亮当前行
autocmd InsertEnter * se cul

"显示输入的命令
set showcmd

"被分割窗口之间显示空白
set fillchars=vert:/
set fillchars=stl:/
set fillchars=stlnc:/

" filetype vim会对文件自动检测文件类型;
" plugin 会在Vim的运行时环境目录下加载该类型相关的插件;
"   比如为了让Vim更好的支持Python编程，需要下载一些Python相关的插件，此时就必须设置plugin为on;
" indent 不同类型文件有不同的缩进方式;
"   如Python就要求使用4个空格作为缩进,c使用两个tab作为缩进;
"   那么indent就可以为不同文件类型选择合适的缩进方式了;
"   在Vim的安装目录的indent目录下看到定义了很多缩进相关的脚本
filetype plugin indent on


" rtp 即 vim runtime path
"   把vim bundle加入rtp
set rtp+=~/.vim/bundle/Vundle.vim

" 插件开始的位置
call vundle#begin()

" Vundle插件管理
Plugin 'VundleVim/Vundle.vim'
" 代码自动补全(需要额外配置）
Plugin 'Valloric/YouCompleteMe'
" Python自动补全
Plugin 'davidhalter/jedi-vim'
" 符号自动补全
Plugin 'Raimondi/delimitMate'

" 插件结束的位置
call vundle#end()

" Specifies Python interpreter to run jedi
let g:ycm_python_binary_path = '/Users/lichao/.pyenv/shims/python'
